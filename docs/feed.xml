<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://joshuaavalon.github.io/jekyll-avalon-test/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.0">Jekyll</generator><link href="http://joshuaavalon.github.io/jekyll-avalon-test/feed.xml" rel="self" type="application/atom+xml" /><link href="http://joshuaavalon.github.io/jekyll-avalon-test/" rel="alternate" type="text/html" /><updated>2016-11-24T12:52:22+00:00</updated><id>http://joshuaavalon.github.io/jekyll-avalon-test//</id><title type="html">Super Vision - Cerebro</title><subtitle>description</subtitle><entry><title type="html">DEVELOPER / CONTRIBUTOR NOTES</title><link href="http://joshuaavalon.github.io/jekyll-avalon-test/cerebro/2016/11/23/DEV.html" rel="alternate" type="text/html" title="&lt;strong&gt;DEVELOPER / CONTRIBUTOR NOTES&lt;/strong&gt;" /><published>2016-11-23T00:00:00+00:00</published><updated>2016-11-23T00:00:00+00:00</updated><id>http://joshuaavalon.github.io/jekyll-avalon-test/cerebro/2016/11/23/DEV</id><content type="html" xml:base="http://joshuaavalon.github.io/jekyll-avalon-test/cerebro/2016/11/23/DEV.html">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;modules&quot;&gt;Modules&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dashboard&lt;/code&gt;: Cerebro dashboard application&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Angular 2 application written in Typescript&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Frontend over Cerebro services&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;services&lt;/code&gt;: Cerebro Webservices&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;REST Webservices powered by Spring-Boot in Java&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Backoffice layer between Cerebro dashboard and Seyren REST API&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker&lt;/code&gt;: Cerebro docker configuration&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;run_cerebro&quot;&gt;Run Cerebro&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To run Cerebro locally, please read the instructions in submodules &lt;code&gt;DEV&lt;/code&gt; files.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;docker_configuration&quot;&gt;Docker configuration&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Cerebro can run with Docker and Docker-Compose configurations (eg. on Katana-Cloud platforms), but it should not be used for local
run/debug (it is just not convenient to link/debug).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;use_docker_locally&quot;&gt;Use Docker locally&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you want to use docker to run Cerebro locally, you must do the following actions&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You have to edit Dockerfile and docker-compose.yml files. Uncomment line below &quot;local conf&quot; and comment line below &quot;release conf&quot; (do not forget to change the project version in Dockerfile)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mvn clean package&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are on windows, execute:&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;export CEREBRO_SERVICES_HOST=$(echo ${DOCKER_HOST} | awk -F/ '{print $3}' | awk -F: '{print $1}')`&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose build&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose up&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Access started containers:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Services: &lt;a href=&quot;http://localhost:3333/cerebro-services&quot; class=&quot;bare&quot;&gt;http://localhost:3333/cerebro-services&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dashboard: &lt;a href=&quot;http://localhost:3334/cerebro&quot; class=&quot;bare&quot;&gt;http://localhost:3334/cerebro&lt;/a&gt; (&lt;a href=&quot;http://localhost:3333/cerebro-services/health&quot; class=&quot;bare&quot;&gt;http://localhost:3333/cerebro-services/health&lt;/a&gt; to check status, details in the &lt;em&gt;Troubleshooting&lt;/em&gt; section)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Once containers are started, use &lt;code&gt;Ctrl+C&lt;/code&gt; to stop them. To run containers as daemon (not printing the logs), add the &lt;code&gt;-d&lt;/code&gt; parameter to Docker-Compose:
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ docker-compose up -d&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;cleanup&quot;&gt;Cleanup&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To stop Docker containers:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ docker-compose down&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sometimes it is necessary to delete previous images using &lt;code&gt;docker-compose rm&lt;/code&gt; and &lt;code&gt;docker-compose rmi&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;// Show running containers
$ docker ps
// Show all containers (add -q to print only IDs)
$ docker ps -a
// Umount container
$ docker rm &amp;lt;container_ID&amp;gt;
// Show all images
$ docker images
// Delete image
$ docker rmi &amp;lt;image_name&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;troubleshooting&quot;&gt;Troubleshooting&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;dt_docker_registry_certificate&quot;&gt;DT docker registry certificate&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See &lt;a href=&quot;https://doc-vsct.vsct.fr/display/DTD/VSCT+Docker+factory&quot; class=&quot;bare&quot;&gt;https://doc-vsct.vsct.fr/display/DTD/VSCT+Docker+factory&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;check_services_status&quot;&gt;Check services status&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Go to &lt;a href=&quot;http://localhost:3333/cerebro-services/health&quot; class=&quot;bare&quot;&gt;http://localhost:3333/cerebro-services/health&lt;/a&gt; to check services status.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
On Windows, remember to replace &lt;code&gt;localhost&lt;/code&gt; by the Docker VM IP (for instance &lt;code&gt;192.168.99.100&lt;/code&gt;).
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The response should be something like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;{
    &quot;status&quot;: &quot;UP&quot;,
    &quot;seyren&quot;: {
        &quot;status&quot;: &quot;UP&quot;
    },
    &quot;diskSpace&quot;: {
        &quot;status&quot;: &quot;UP&quot;,
        &quot;total&quot;: 99725537280,
        &quot;free&quot;: 75563044864,
        &quot;threshold&quot;: 10485760
    }
}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When Seyren backend is &lt;code&gt;DOWN&lt;/code&gt;, it can&amp;#8217;t be reached and services will be &lt;code&gt;DOWN&lt;/code&gt; too.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><category term="documentation" /><category term="cerebro" /></entry><entry><title type="html">article 2, la suite de l’épopée!</title><link href="http://joshuaavalon.github.io/jekyll-avalon-test/article/2016/11/23/ARTICLE2.html" rel="alternate" type="text/html" title="article 2, la suite de l'épopée!" /><published>2016-11-23T00:00:00+00:00</published><updated>2016-11-23T00:00:00+00:00</updated><id>http://joshuaavalon.github.io/jekyll-avalon-test/article/2016/11/23/ARTICLE2</id><content type="html" xml:base="http://joshuaavalon.github.io/jekyll-avalon-test/article/2016/11/23/ARTICLE2.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;ça continue!
un build Jenkins ?&lt;/p&gt;
&lt;/div&gt;</content><category term="article" /><category term="cerebro" /><summary type="html">ça continue!
un build Jenkins ?</summary></entry><entry><title type="html">Cerebro: notifications for all</title><link href="http://joshuaavalon.github.io/jekyll-avalon-test/cerebro/2016/11/22/README.html" rel="alternate" type="text/html" title="&lt;strong&gt;Cerebro: notifications for all&lt;/strong&gt;" /><published>2016-11-22T00:00:00+00:00</published><updated>2016-11-22T00:00:00+00:00</updated><id>http://joshuaavalon.github.io/jekyll-avalon-test/cerebro/2016/11/22/README</id><content type="html" xml:base="http://joshuaavalon.github.io/jekyll-avalon-test/cerebro/2016/11/22/README.html">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;v0.5.0, 09 juin 2016
:encoding: UTF-8
:toc: macro&lt;/p&gt;
&lt;/div&gt;
&lt;!-- toc disabled --&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/en/9/96/Emma_Frost_using_Cerebro.jpg&quot; alt=&quot;Cerebro&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Cerebro&lt;/em&gt; is a web dashboard to subscribe, check and manage notifications over Graphite data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please check the &lt;a href=&quot;https://wiki.vsct.fr/display/SUP/Cerebro&quot;&gt;Cerebro wiki&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;what_is_included&quot;&gt;What is included?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;services&lt;/em&gt; : REST webservices over backends, such as Seyren, writen in Spring/Java&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;dashboard&lt;/em&gt; : user interface, writen in Angular 2 (TypeScript + Bootstrap)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;user_manual&quot;&gt;User manual&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;how_to_get_the_source&quot;&gt;How to get the source&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The source is free to clone from &lt;a href=&quot;http://gitlab.socrate.vsct.fr/super/cerebro&quot;&gt;GitLab&lt;/a&gt; repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ git clone git@gitlab.socrate.vsct.fr:super/cerebro.git&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please check the &lt;a href=&quot;https://wiki.vsct.fr/display/SUP/Cerebro&quot;&gt;Cerebro wiki&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;using_cerebro&quot;&gt;Using Cerebro&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please check the &lt;a href=&quot;https://wiki.vsct.fr/display/SUP/Cerebro&quot;&gt;Cerebro wiki&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;building_running_cerebro&quot;&gt;Building/running Cerebro&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please check the &lt;code&gt;DEV&lt;/code&gt; files (in sources) for developer and contributor notes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;support&quot;&gt;Support&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please contact &lt;a href=&quot;mailto:VSCT_SUPERVISION_CORETEAM@voyages-sncf.com&quot;&gt;VSCT_SUPERVISION_CORETEAM@voyages-sncf.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;registered_users_roadmap_etc&quot;&gt;Registered users, roadmap, etc.&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please check the &lt;a href=&quot;https://wiki.vsct.fr/display/SUP/Cerebro&quot;&gt;Cerebro wiki&lt;/a&gt; for more information about this component users, roadmap, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><category term="readme" /><category term="cerebro" /></entry><entry><title type="html">article 1, le début d’une épopée!</title><link href="http://joshuaavalon.github.io/jekyll-avalon-test/article/2016/11/21/ARTICLE1.html" rel="alternate" type="text/html" title="article 1, le début d'une épopée!" /><published>2016-11-21T00:00:00+00:00</published><updated>2016-11-21T00:00:00+00:00</updated><id>http://joshuaavalon.github.io/jekyll-avalon-test/article/2016/11/21/ARTICLE1</id><content type="html" xml:base="http://joshuaavalon.github.io/jekyll-avalon-test/article/2016/11/21/ARTICLE1.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ca n&amp;#8217;est que le début!&lt;/p&gt;
&lt;/div&gt;</content><category term="article" /><category term="cerebro" /><summary type="html">Ca n&amp;#8217;est que le début!</summary></entry></feed>
